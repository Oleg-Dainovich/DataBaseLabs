Use MusicDB

CREATE TABLE [User]
(
	Id INT PRIMARY KEY IDENTITY(1, 1),
	Username VARCHAR(20) NOT NULL UNIQUE,
	Email VARCHAR(20) NOT NULL UNIQUE,
	PasswordHash VARCHAR(20) NOT NULL,
	CreatedAt DATE NOT NULL DEFAULT GETDATE(),
	UpdatedAt DATE
);

CREATE TABLE Account
(
	Id INT PRIMARY KEY IDENTITY(1, 1),
	UserId INT NOT NULL UNIQUE,
	Avatar IMAGE,
	Bio VARCHAR(255),
	CreatedAt DATE NOT NULL DEFAULT GETDATE(),
	UpdatedAt DATE
);

ALTER TABLE Account
ADD CONSTRAINT FK_Account_User FOREIGN KEY (UserId) REFERENCES [User] (Id) ON DELETE NO ACTION;

CREATE TABLE [Notification]
(
	Id INT PRIMARY KEY IDENTITY(1, 1),
	AccountId INT NOT NULL,
	[Message] VARCHAR(255) NOT NULL,
	SentAt DATE NOT NULL DEFAULT GETDATE(),
	SeenAt DATE
);

ALTER TABLE [Notification]
ADD CONSTRAINT FK_Notification_Account FOREIGN KEY (AccountId) REFERENCES Account (Id) ON DELETE CASCADE;

CREATE TABLE Subscription
(
	Id INT PRIMARY KEY IDENTITY(1, 1),
	AccountId INT NOT NULL UNIQUE,
	StartDate DATE NOT NULL,
	EndDate DATE NOT NULL,
	CHECK (StartDate < EndDate),
	CONSTRAINT FK_Subscription_Account FOREIGN KEY (AccountId) REFERENCES Account (Id) ON DELETE CASCADE
);

CREATE TABLE Playlist
(
	Id INT PRIMARY KEY IDENTITY(1, 1),
	AccountId INT NOT NULL,
	[Name] VARCHAR(20) NOT NULL,
	Duration FLOAT NOT NULL,
	CreatedAt DATE NOT NULL DEFAULT GETDATE(),
	UpdatedAt DATE,
	CONSTRAINT FK_Playlist_Account FOREIGN KEY (AccountId) REFERENCES Account (Id) ON DELETE CASCADE
);

CREATE TABLE Genre
(
	Id INT PRIMARY KEY IDENTITY(1, 1),
	[Name] VARCHAR(20) NOT NULL UNIQUE,
	[Description] VARCHAR(255)
);

CREATE TABLE Album
(
	Id INT PRIMARY KEY IDENTITY(1, 1),
	[Name] VARCHAR(20) NOT NULL,
	ArtistId INT NOT NULL,
	ReleaseDate DATE NOT NULL,
	Duration FLOAT NOT NULL,
	Cover IMAGE
);

CREATE TABLE Song
(
	Id INT PRIMARY KEY IDENTITY(1, 1),
	AlbumId INT NOT NULL,
	GenreId INT NOT NULL,
	[Name] VARCHAR(20) NOT NULL,
	Duration FLOAT NOT NULL,
	[Text] VARCHAR(MAX),
	ReleaseDate DATE NOT NULL,
	CONSTRAINT FK_Song_Album FOREIGN KEY (AlbumId) REFERENCES Album (Id),
	CONSTRAINT FK_Song_Genre FOREIGN KEY (GenreId) REFERENCES Genre (Id)
);

CREATE TABLE Song_And_Playlist
(
	SongId INT NOT NULL,
	PlaylistId INT NOT NULL,
	CONSTRAINT FK_SongAndPlaylist_Song FOREIGN KEY (SongId) REFERENCES Song (Id),
	CONSTRAINT FK_SongAndPlaylist_Playlist FOREIGN KEY (PlaylistId) REFERENCES Playlist (Id)
);

CREATE TABLE [Label]
(
	Id INT PRIMARY KEY IDENTITY(1, 1),
	[Name] VARCHAR(20) NOT NULL,
	[Description] VARCHAR(MAX),
	ProfitShare FLOAT NOT NULL,
	CHECK (ProfitShare >= 0)
);

CREATE TABLE Artist
(
	Id INT PRIMARY KEY IDENTITY(1, 1),
	LabelId INT,
	[Name] VARCHAR(20) NOT NULL,
	Avatar IMAGE,
	Bio VARCHAR(255),
	CONSTRAINT FK_Artist_Label FOREIGN KEY (LabelId) REFERENCES [Label] (Id),
);

CREATE TABLE Song_And_Artist
(
	SongId INT NOT NULL,
	ArtistId INT NOT NULL,
	CONSTRAINT FK_SongAndArtist_Song FOREIGN KEY (SongId) REFERENCES Song (Id),
	CONSTRAINT FK_SongAndArtist_Artist FOREIGN KEY (ArtistId) REFERENCES Artist (Id)
);

ALTER TABLE Album
ADD CONSTRAINT FK_Album_Artist FOREIGN KEY (ArtistId) REFERENCES Artist (Id)
